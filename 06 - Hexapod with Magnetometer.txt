
$NOMOD51
$INCLUDE (8051.MCU)

      ; Reset Vector
     org   0000h
      jmp   start
;====================================================================
; CODE SEGMENT
;====================================================================

START:
		MOV P1, #00000000B
		MOV TMOD,#00010001B
		SDA equ P2.0
		SCL equ P2.1
		ACALL SET_MAGNETOMETER_MODE
STEP:
		LCALL RESET_CYCLE
		ACALL INITIAL_POSITION
		
MULAI:
		MOV R3, #03H
SET_POINT_NORTH:
		ACALL GET_X_Y
		LCALL RESET_CYCLE
		ACALL PUTAR_45_DEGREE_KIRI
		AJMP SET_POINT_NORTH
		
		MOV A, R1
		MOV R5, A ;STORE SETPOINT X TO R5
		MOV A, R2
		MOV R6, A ;STORE SETPOINT 6 TO R6

CHECK_TO_NORTH :
		
		;CEK JIKA X POSITIF / NEGATIF	
		ACALL GET_X_Y
		MOV A, R1
		XRL A, R5
		ANL A, #10000000B
		CJNE A, #00000000B, PUTAR
		CLR C
		MOV A, R1
		ANL A, #10000000B
		CJNE A, #00000000B, NEG_X
;CHECK_UPPER_X
		CLR C
		MOV A, R5
		ADD A, #07H
		SUBB A, R1
		JC KIRI
;CHECK_LOWER_X
		CLR C
		MOV A, R5
		SUBB A, #07H
		SUBB A, R1
		JC CHECK_Y
		JMP KANAN
NEG_X:	
;CHECK_LOWER_X
		CLR C
		MOV A, R5
		SUBB A, #07H
		SUBB A, R1
		JNC KIRI
;CHECK_UPPER_X
		CLR C
		MOV A, R5
		ADD A, #07H
		SUBB A, R1
		JC CHECK_Y
		AJMP KANAN

CHECK_Y:;ACALL RESET_CYCLE
		;ACALL MOVE_FORWARD
		AJMP CHECK_TO_NORTH

FORWARD_NORTH:
		MOV R4, #2BH
FORWARD_NORTH_1:
		DEC R4
		ACALL MOVE_FORWARD
		DJNZ R4, FORWARD_NORTH_1
		JMP CHECK_TO_NORTH
		
CHECK_SOUTH:

STAY:	JMP STAY
	
PUTAR:  ACALL RESET_CYCLE
		ACALL INITIAL_POSITION
		ACALL PUTAR_45_DEGREE_KANAN
		JMP CHECK_TO_NORTH
KANAN:  ACALL RESET_CYCLE
		ACALL INITIAL_POSITION
		ACALL PUTAR_10DEGREE_KANAN
		JMP CHECK_TO_NORTH
KIRI:	ACALL RESET_CYCLE
		ACALL INITIAL_POSITION
		ACALL PUTAR_10DEGREE_KIRI
		JMP CHECK_TO_NORTH
;=============================================		
;              GERAK SERVO
;=============================================
;PENGATUR KECEPATAN GERAK
RESET_CYCLE :
		MOV A, #05H
		RET
;PUTARAN 45 DERAJAT KE KANAN
PUTAR_45_DEGREE_KANAN:
		DEC A
		MOV TL0, #LOW(-1200)
		MOV TH0, #HIGH(-1200)
		MOV TL1, #LOW(-2100)
		MOV TH1, #HIGH(-2100)
		SETB P1.0
		SETB P1.1
		SETB P1.4
		SETB P1.5
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.1
		CLR P1.5
		JNB TF1, $
		CLR P1.0
		CLR P1.4
		CLR TR0
		CLR TR1
		CLR TF0
		CLR TF1
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_45_DEGREE_KANAN
		ACALL RESET_CYCLE
		
		ACALL INITIAL_1
PUTAR_45_DEGREE_KANAN_2:
		DEC A
		MOV TL0, #LOW(-1200)
		MOV TH0, #HIGH(-1200)
		MOV TL1, #LOW(-1950)
		MOV TH1, #HIGH(-1950)
		SETB P1.2
		SETB P1.3
		SETB P1.6
		SETB P1.7
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.7
		CLR P1.3
		JNB TF1, $
		CLR P1.2
		CLR P1.6
		CLR TR0
		CLR TR1
		CLR TF0
		CLR TF1
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_45_DEGREE_KANAN_2
		ACALL RESET_CYCLE
		ACALL INITIAL_1
		ACALL INITIAL_POSITION
		RET
;PUTARAN 45 DERAJAT KE KIRI		
PUTAR_45_DEGREE_KIRI:
		DEC A
		MOV TL0, #LOW(-940)
		MOV TH0, #HIGH(-940)
		MOV TL1, #LOW(-1200)
		MOV TH1, #HIGH(-1200)
		SETB P1.0
		SETB P1.1
		SETB P1.4
		SETB P1.5
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.0
		CLR P1.4
		JNB TF1, $
		CLR P1.1
		CLR P1.5
		CLR TR0
		CLR TR1
		CLR TF0
		CLR TF1
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_45_DEGREE_KIRI
		ACALL RESET_CYCLE
		
		ACALL INITIAL_1
PUTAR_45_DEGREE_KIRI_2:
		DEC A
		MOV TL0, #LOW(-940)
		MOV TH0, #HIGH(-940)
		MOV TL1, #LOW(-1200)
		MOV TH1, #HIGH(-1200)
		SETB P1.2
		SETB P1.3
		SETB P1.6
		SETB P1.7
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.2
		CLR P1.6
		JNB TF1, $
		CLR P1.7
		CLR P1.3
		CLR TR0
		CLR TR1
		CLR TF0
		CLR TF1
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_45_DEGREE_KIRI_2
		ACALL RESET_CYCLE
		ACALL INITIAL_1
		ACALL INITIAL_POSITION
		RET
;========================================		
INITIAL_POSITION:
		DEC A
		MOV TL0, #LOW(-1450)
		MOV TH0, #HIGH(-1450)
		SETB P1.0
		SETB P1.2
		SETB P1.4
		SETB P1.6
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		MOV P1, #00000000B
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ INITIAL_POSITION	
		ACALL RESET_CYCLE	
		
INITIAL_1:
		DEC A
		MOV TL0, #LOW(-1450)
		MOV TH0, #HIGH(-1450)
		SETB P1.1
		SETB P1.3
		SETB P1.5
		SETB P1.7
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		MOV P1, #00000000B
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ INITIAL_1
		ACALL RESET_CYCLE	
		RET
;===================================	
;       KINEMATIKA SERVO
;===================================
PUTAR_10DEGREE_KANAN:
		DEC A
		MOV TL0, #LOW(-1200)
		MOV TH0, #HIGH(-1200)
		SETB P1.1
		SETB P1.5
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.1
		CLR P1.5
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_10DEGREE_KANAN
		ACALL RESET_CYCLE
		
PUTAR_10DEGREE_KANAN_1:
		DEC A
		MOV TL0, #LOW(-1400)
		MOV TH0, #HIGH(-1400)
		SETB P1.0
		SETB P1.4
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.0
		CLR P1.4
		;JNB TF1, $
		;CLR P1.0
		;CLR P1.4
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_10DEGREE_KANAN_1
		ACALL RESET_CYCLE
		ACALL INITIAL_1
		
PUTAR_10DEGREE_KANAN_2:
		DEC A
		MOV TL0, #LOW(-1200)
		MOV TH0, #HIGH(-1200)
		SETB P1.3
		SETB P1.7
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.7
		CLR P1.3
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_10DEGREE_KANAN_2
		ACALL RESET_CYCLE
		
PUTAR_10DEGREE_KANAN_3:
		DEC A
		MOV TL0, #LOW(-1400)
		MOV TH0, #HIGH(-1400)
		SETB P1.2
		SETB P1.6
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.2
		CLR P1.6
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_10DEGREE_KANAN_3
		ACALL RESET_CYCLE
		ACALL INITIAL_1		
		ACALL INITIAL_POSITION		
		RET
;==============   KIRI ==========
PUTAR_10DEGREE_KIRI:
		DEC A
		MOV TL0, #LOW(-1200)
		MOV TH0, #HIGH(-1200)
		SETB P1.1
		SETB P1.5
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.1
		CLR P1.5
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_10DEGREE_KIRI
		ACALL RESET_CYCLE

		
PUTAR_10DEGREE_KIRI_1:
		DEC A
		MOV TL0, #LOW(-1600)
		MOV TH0, #HIGH(-1600)
		SETB P1.0
		SETB P1.4
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.0
		CLR P1.4
		;JNB TF1, $
		;CLR P1.0
		;CLR P1.4
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_10DEGREE_KIRI_1
		ACALL RESET_CYCLE
		ACALL INITIAL_1
		
PUTAR_10DEGREE_KIRI_2:
		DEC A
		MOV TL0, #LOW(-1200)
		MOV TH0, #HIGH(-1200)
		SETB P1.3
		SETB P1.7
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.7
		CLR P1.3
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_10DEGREE_KIRI_2
		ACALL RESET_CYCLE


PUTAR_10DEGREE_KIRI_3:
		DEC A
		MOV TL0, #LOW(-1600)
		MOV TH0, #HIGH(-1600)
		SETB P1.2
		SETB P1.6
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.2
		CLR P1.6
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ PUTAR_10DEGREE_KIRI_3
		ACALL RESET_CYCLE
		ACALL INITIAL_1		
		ACALL INITIAL_POSITION		
		RET	
		
STANDING:
		DEC A
		MOV TL0, #LOW(-1500)
		MOV TH0, #HIGH(-1500)
		SETB P1.1
		SETB P1.3
		SETB P1.5
		SETB P1.7
		SETB TR0
		JNB TF0, $
		CLR P1.1
		CLR P1.3
		CLR P1.5
		CLR P1.7
		CLR TR0
		CLR TF0
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ STANDING
		ACALL RESET_CYCLE
		RET
MOVE_FORWARD:
		DEC A
		MOV TL0, #LOW(-1200)
		MOV TH0, #HIGH(-1200)
		MOV TL1, #LOW(-1950)
		MOV TH1, #HIGH(-1950)
		SETB P1.2
		SETB P1.3
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.3
		JNB TF1, $
		CLR P1.2
		CLR TR0
		CLR TR1
		CLR TF0
		CLR TF1
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ MOVE_FORWARD
		ACALL RESET_CYCLE
		ACALL STANDING
MOVE_FORWARD_1:
		DEC A
		MOV TL0, #LOW(-940)
		MOV TH0, #HIGH(-940)
		MOV TL1, #LOW(-1200)
		MOV TH1, #HIGH(-1200)
		SETB P1.4
		SETB P1.5
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.4
		JNB TF1, $
		CLR P1.5
		CLR TR0
		CLR TR1
		CLR TF0
		CLR TF1	
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ MOVE_FORWARD_1
		ACALL RESET_CYCLE
		ACALL STANDING
MOVE_FORWARD_2: ;MAJU
		DEC A
		MOV TL0, #LOW(-940)
		MOV TH0, #HIGH(-940)
		MOV TL1, #LOW(-1950)
		MOV TH1, #HIGH(-1950)
		SETB P1.0
		SETB P1.2
		SETB P1.4
		SETB P1.6
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.0
		CLR TF0
		CLR TR0
		MOV TL0, #LOW(-560)
		MOV TH0, #HIGH(-560)
		SETB TR0
		JNB TF0, $
		CLR P1.2
		CLR P1.4
		JNB TF1, $
		CLR P1.6
		CLR TR0
		CLR TR1
		CLR TF0
		CLR TF1	
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ MOVE_FORWARD_2
		ACALL RESET_CYCLE
		ACALL STANDING
MOVE_FORWARD_3:
		DEC A
		MOV TL0, #LOW(-1200)
		MOV TH0, #HIGH(-1200)
		MOV TL1, #LOW(-1500)
		MOV TH1, #HIGH(-1500)
		SETB P1.0
		SETB P1.1
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.1
		JNB TF1, $
		CLR P1.0
		CLR TR0
		CLR TR1
		CLR TF0
		CLR TF1
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ MOVE_FORWARD_3
		ACALL RESET_CYCLE
		ACALL STANDING
MOVE_FORWARD_4:
		DEC A
		MOV TL0, #LOW(-1200)
		MOV TH0, #HIGH(-1200)
		MOV TL1, #LOW(-1500)
		MOV TH1, #HIGH(-1500)
		SETB P1.6
		SETB P1.7
		SETB TR0
		SETB TR1
		JNB TF0, $
		CLR P1.7
		JNB TF1, $
		CLR P1.6
		CLR TR0
		CLR TR1
		CLR TF0
		CLR TF1
		MOV TL0, #LOW(-19100)
		MOV TH0, #HIGH(-19100)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		JNZ MOVE_FORWARD_4
		ACALL RESET_CYCLE
		ACALL STANDING
		RET
		
;=================================
;       I2C SUBROUTINE
;=================================
GET_X_Y:
;GET DATA X AND Y, STORE IT TO R1 AND R2
;WRITE MODE TO POINT ADDRESS
		lcall i2cinit ;baca data
lcall startc
mov a,#3CH ;ADDR DEVICE+WRITE
acall send
mov a,#03H;POINTER ADDRESS
acall send
acall stop

lcall i2cinit
lcall startc
mov a,#3DH ;ADDR DEVICE+READ
acall send
acall recv
;mov R1,A   ;MOVE DATA FROM ADDR 3H (X MSB) TO P1
acall ack
acall recv
mov R1,A   ;MOVE DATA FROM ADDR 4H (X LSB) TO P1
acall ack
acall recv
;mov R3,A   ;MOVE DATA FROM ADDR 4H (Z MSB) TO P1
acall ack
acall recv
;mov R4,A   ;MOVE DATA FROM ADDR 4H (Z LSB) TO P1
acall ack
acall recv
;mov R5,A   ;MOVE DATA FROM ADDR 4H (Y MSB) TO P1
acall ack
acall recv
mov R2,A   ;MOVE DATA FROM ADDR 4H (Y LSB) TO P1
acall naCk
acall stop

;ADD BIAS 
;MOV A, R1
;SUBB A, #018H
;MOV R1, A
;MOV A, R2
;ADD A, #016H
;MOV R2, A

		mov A,R1
		acall serial
		mov A,R2
		acall serial
		mov A,#22h
		acall serial
		RET

DELAY :
		MOV TMOD,#00010001b
		MOV TL0, #LOW(-1000)
		MOV TH0, #HIGH(-1000)
		SETB TR0
		JNB TF0, $
		CLR TR0
		CLR TF0
		RET
I2CINIT:
		SETB SDA
		SETB SCL
		RET
STARTC:
		SETB SCL
		CLR SDA
		CLR SCL
		RET
STOP:
		CLR SCL
		CLR SDA
		SETB SCL
		SETB SDA
		RET
SEND:
		MOV R7,#08
BACK:
		CLR SCL
		RLC A
		MOV SDA, C
		SETB SCL
		DJNZ R7,BACK
		CLR SCL
		SETB SDA
		SETB SCL
		MOV C, SDA
		CLR SCL
		RET		
ACK:
		CLR SDA
		SETB SCL
		CLR SCL
		SETB SDA
		RET
NACK:
		SETB SDA
		SETB SCL
		CLR SCL
		SETB SCL
		RET
RECV:
		MOV R7,#08
BACK2:
		CLR SCL
		SETB SCL
		MOV C,SDA
		RLC A
		DJNZ R7,BACK2
		CLR SCL
		SETB SDA
		RET
SET_MAGNETOMETER_MODE:
		LCALL I2CINIT 
		LCALL STARTC
		MOV A,#3CH
		LCALL SEND
		MOV A,#01H  ;START ADDRESS
		LCALL SEND
		MOV A,#0E0H ;MODE GAIN 291
		LCALL SEND
		mov A,#00H  ;CONTINOUS MEAUSREMENT
		LCALL SEND
		LCALL STOP
		RET
;====================================
;		DEBUGGING VIA SERIAL
;====================================
serial: 
      mov scon,#01000010b
      mov tmod,#00100001b
      mov th1,#253
      setb tr1
Loop1: 
      clr TI
      mov sbuf,A
      ;acall delay
      jnb TI,$
      clr A
      ret

	  
END